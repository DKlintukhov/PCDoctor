/*
 *  This file is part of nzbget. See <https://github.com/DKlintukhov/PCDoctorBot>.
 *
 *  Copyright (C) 2025 Denis <denis.klintukhov@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

use teloxide::{
    prelude::*,
    types::{KeyboardButton, KeyboardMarkup},
};

fn main_menu_keyboard() -> KeyboardMarkup {
    let buttons = vec![
        vec![KeyboardButton::new("üñ•Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ü–ö")],
        vec![KeyboardButton::new("üêß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–°")],
        vec![KeyboardButton::new("üåê –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤")],
        vec![KeyboardButton::new("üñ•Ô∏è –î–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")],
        vec![KeyboardButton::new("ü§ñ –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ã")],
        vec![
            KeyboardButton::new("üìû –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫"),
            KeyboardButton::new("üì® –û—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"),
        ],
    ];

    KeyboardMarkup::new(buttons).resize_keyboard()
}

fn os_install_keyboard() -> KeyboardMarkup {
    let buttons = vec![
        vec![KeyboardButton::new("Windows")],
        vec![KeyboardButton::new("Linux")],
        vec![KeyboardButton::new("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")],
    ];

    KeyboardMarkup::new(buttons).resize_keyboard()
}

#[tokio::main]
async fn main() {
    pretty_env_logger::init();

    let bot = Bot::from_env();

    teloxide::repl(bot, |bot: Bot, msg: Message| async move {
        let text = msg.text().unwrap_or_default();

        match text {
            "/start" => {
                let keyboard = main_menu_keyboard();
                bot.send_message(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–º–æ—â–∏:")
                    .reply_markup(keyboard)
                    .await?;
            }
            "üñ•Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ü–ö" => {
                bot.send_message(msg.chat.id, "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ü–ö:")
                    .await?;
            }
            "üêß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–°" => {
                let keyboard = os_install_keyboard();
                bot.send_message(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –û–°:")
                    .reply_markup(keyboard)
                    .await?;
            }
            "üìû –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫" => {
                bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –º—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º:")
                    .await?;
            }
            "üé§ –û—Å—Ç–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" => {
                bot.send_message(msg.chat.id, "–ó–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
                    .await?;
            }
            "‚ùì –î—Ä—É–≥–æ–µ" => {
                bot.send_message(msg.chat.id, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å:").await?;
            }
            "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" => {
                let keyboard = main_menu_keyboard();
                bot.send_message(msg.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:")
                    .reply_markup(keyboard)
                    .await?;
            }
            _ => {
                bot.send_message(msg.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.")
                    .await?;
            }
        }

        Ok(())
    })
    .await;
}
